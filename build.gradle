plugins {

    //     id 'java-library'

    id 'org.springframework.boot' version "${springBootPluginVersion}"
    id 'io.spring.dependency-management' version "${springDependencyPluginVersion}"
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"

    group 'com.cfx'
    version "${projectVersion}"
    sourceCompatibility = "${sourceCompatibilityVersion}"
    compileJava.options.encoding = "UTF-8"

    configurations.configureEach {
        transitive = true
    }

    jar {
        enabled = true //生成依赖jar包
        archiveClassifier = '' //取消原来plain的后缀
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    // 仓库地址
    repositories {
        mavenLocal()
        mavenCentral()
    }
    ext {
        set("mybaitsPlusVersion", "3.5.3.1")
    }

    dependencies {

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        constraints {
            // Platform declares some versions of libraries used in subprojects
            implementation('commons-httpclient:commons-httpclient:3.1')
            implementation('org.apache.commons:commons-lang3:3.8.1')
            implementation('jakarta.servlet:jakarta.servlet-api:4.0.4')
            implementation('javax.validation:validation-api:2.0.1.Final')
            implementation('org.freemarker:freemarker:2.3.31')
            implementation('com.baomidou:mybatis-plus:3.4.0')
            implementation("com.baomidou:mybatis-plus-generator:${mybaitsPlusVersion}")
            implementation("com.baomidou:mybatis-plus-annotation:${mybaitsPlusVersion}")
            implementation("com.baomidou:mybatis-plus-boot-starter:${mybaitsPlusVersion}")
            implementation("com.baomidou:mybatis-plus-extension:${mybaitsPlusVersion}")
            implementation('mysql:mysql-connector-java:8.0.29')
            implementation('org.projectlombok:lombok:1.18.24')
            implementation('com.alibaba:fastjson:2.0.15')
            implementation('org.slf4j:slf4j-api:1.7.36')

        }
    }

    dependencyManagement {
        imports {
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}


// 拷贝配置文件


tasks.register('copyFile', Copy) {
    //获取所有模块信息
    // 源文件
    rootProject.subprojects.each { subproject ->
        if (subproject.name.contains('samples') && subproject.name != 'samples') {
            println subproject.name
            // 目标路径
            from('resources/config/bootstrap-register.yml')

            into('samples/' + subproject.name + '/src/main/resources')
            println 'samples/' + subproject.name + '/src/main/resources'
        }
    }
}


//remove source
sourceSets {
    main {
        java {
            srcDirs = []
        }
        resources {
            srcDirs = []
        }
    }
    test {
        java {
            srcDirs = []
        }
        resources {
            srcDirs = []
        }
    }
}